@model IEnumerable<Ordering>
@using ProductOrdering.Extensions
@{
    ViewData["Title"] = "OrderPreparingToPrint";
}

<h1>พิมพ์ Label รายการสั่งซื้อ</h1>

<div class="form-inline">
    <form asp-action="OrderPreparingToPrint" method="post">
        <input type="text" name="q" class="form-control" />
        <span style="margin-left: 10px;">หมวดสินค้า</span>
        <select class="form-control" name="CategoryId" asp-items="ViewBag.CategoryId">
            <option value="">ทั้งหมด</option>
        </select>
        <span style="margin-left: 10px;">วันที่</span>
        <input type="date" name="dateOrder" class="form-control" />
        <button type="submit" class="btn btn-info">ค้นหา</button>
    </form>
</div>

<form asp-action="PrintOrder" onsubmit="setTimeout(function(){window.location.reload();}, 5000);" id="formOrdering" method="post" enctype="multipart/form-data">
    <div class="form-inline">
        <input type="submit" id="btnSubmit" value="พิมพ์" onclick="return CheckOrder();" class="btn btn-primary" />
    </div>

    <table class="table table-striped table-hover col-md-12">
        <thead class="table-dark">
            <tr>
                <th><input type="checkbox" onclick="toggle(this)" />เลือกทั้งหมด</th>
                <th>
                    @Html.DisplayNameFor(model => model.Product.ProductImage)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Payment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Discount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Time)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Receiver.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Receiver.Address)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" value="@item.OrderingId" id="OrderingId" name="OrderingId" />
                        <label>@item.Product.Name</label>

                    </td>
                    <td>
                        <div>
                            <img src="~/imageSource/@item.Product.ProductImage"
                                 id="ProductImageSource" class="img-thumbnail rounded"
                                 height="100" width="100"
                                 asp-append-version="true" />
                        </div>
                        @*@Html.DisplayFor(modelItem => item.Product.ProductImage)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Name)
                    </td>
                    <td>
                        @item.Payment.GetDisplayName()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Discount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Time)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Receiver.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Receiver.FullAddress)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    function toggle(source) {
        //console.log(source);
        checkboxes = document.getElementsByName('OrderingId');
        for (var i = 0, n = checkboxes.length; i < n; i++) {
            checkboxes[i].checked = source.checked;
        }
        
    }

    function CheckOrder() {
        //checkBoxes = document.getElementsByName('OrderingId');
        //console.log(checkBoxes);
        var checkbox = document.querySelector('input[name="OrderingId"]:checked');
        // console.log(checkbox);
        
        if (!checkbox) {
            alert("โปรดเลือกรายการสั่งซื้อก่อนพิมพ์");
            return false;
        }
    }

    //$(function () {
    //    $("#btnSubmit").click(function () {
    //        //var checkbox = document.querySelector('input[name="OrderingId"]:checked');
    //        //// console.log(checkbox);
    //        //console.log("Hello world");
    //        //if (!checkbox) {
    //        //    alert("โปรดเลือกรายการสั่งซื้อก่อนพิมพ์");
    //        //    return false;
    //        //}

    //        var selected = new Array();
    //        $("input:checkbox[name=OrderingId]:checked").each(function () {
    //            selected.push($(this).val());
    //        });
    //        var postData = { OrderingId: selected };
    //        //var OrderingId = $("#OrderingId").val();
    //        console.log(selected);
    //        $.ajax({
    //            type: "POST",
    //            url: "PrintOrder",
    //            data: postData,
                
    //            success: function () {
    //                window.location.reload();
    //            },
    //            dataType: "json",
    //            traditional: true
    //        });
    //    });
    //});
    
</script>

