@model IEnumerable<Ordering>
@using ProductOrdering.Extensions
@using X.PagedList.Mvc.Core; <!--import to get HTML Helper-->
@using X.PagedList;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{
    ViewData["Title"] = "OrderPreparingToPrint";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}

@*<h1>พิมพ์ Label รายการสั่งซื้อ</h1>*@
<div class="row">
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">ค้นหา</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            <form asp-action="OrderPreparingToPrint" method="get" role="form">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>ชื่อผู้รับ</label>
                                <input type="text" name="q" value="@ViewBag.q" placeholder="ชื่อผู้รับ" class="form-control" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>หมวดสินค้า</label>
                                <select class="form-control" name="CategoryId" asp-items="ViewBag.CategoryId">
                                    <option value="">ทั้งหมด</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>วันที่</label>
                                <input type="date" name="dateOrder" value="@ViewBag.dateOrder" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->

                <div class="card-footer">
                    <button type="submit" class="btn btn-info">ค้นหา</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- /.card -->

<form asp-action="PrintOrder" onsubmit="setTimeout(function(){window.location.reload();}, 5000);" id="formOrdering" method="post" enctype="multipart/form-data">
    <div style="margin-bottom: 5px">
        <button type="submit" id="btnSubmit" onclick="return CheckOrder();" class="btn btn-success col-md-4"><i style="margin-right: 5px" class="fas fa-print"></i>พิมพ์</button>
    </div>
    <div>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th><input type="checkbox" onclick="toggle(this)" />เลือกทั้งหมด</th>
                    <th>
                        @Html.DisplayNameFor(model => model.Product.ProductImage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Payment)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Discount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TotalPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Time)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Receiver.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Receiver.Address)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" value="@item.OrderingId" id="OrderingId" name="OrderingId" />
                            <label>@item.Product.Name</label>

                        </td>
                        <td>
                            <div>
                                <img src="~/imageSource/@item.Product.ProductImage"
                                     id="ProductImageSource" class="img-thumbnail rounded"
                                     height="100" width="100"
                                     asp-append-version="true" />
                            </div>
                            @*@Html.DisplayFor(modelItem => item.Product.ProductImage)*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Product.Name)
                        </td>
                        <td>
                            @item.Payment.GetDisplayName()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Discount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Time)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Receiver.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Receiver.FullAddress)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>
<!-- paging control for navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList)Model, page => Url.Action("OrderPreparingToPrint",
    new
    {
        page = page,
        q = HttpContextAccessor.HttpContext.Request.Query["q"].ToString(),
        CategoryId = HttpContextAccessor.HttpContext.Request.Query["CategoryId"]
    }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = false,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },

    })
@section Scripts{
    <script>
        // Workaround to fix style of text for showing items .. through ..
        // Problem related to Boostrap 4 according to issue in link below
        // https://github.com/dncuug/X.PagedList/issues/127
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
}
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    function toggle(source) {
        //console.log(source);
        checkboxes = document.getElementsByName('OrderingId');
        for (var i = 0, n = checkboxes.length; i < n; i++) {
            checkboxes[i].checked = source.checked;
        }

    }

    function CheckOrder() {
        //checkBoxes = document.getElementsByName('OrderingId');
        //console.log(checkBoxes);
        var checkbox = document.querySelector('input[name="OrderingId"]:checked');
        // console.log(checkbox);

        if (!checkbox) {
            alert("โปรดเลือกรายการสั่งซื้อก่อนพิมพ์");
            return false;
        }
    }

        //$(function () {
        //    $("#btnSubmit").click(function () {
        //        //var checkbox = document.querySelector('input[name="OrderingId"]:checked');
        //        //// console.log(checkbox);
        //        //console.log("Hello world");
        //        //if (!checkbox) {
        //        //    alert("โปรดเลือกรายการสั่งซื้อก่อนพิมพ์");
        //        //    return false;
        //        //}

        //        var selected = new Array();
        //        $("input:checkbox[name=OrderingId]:checked").each(function () {
        //            selected.push($(this).val());
        //        });
        //        var postData = { OrderingId: selected };
        //        //var OrderingId = $("#OrderingId").val();
        //        console.log(selected);
        //        $.ajax({
        //            type: "POST",
        //            url: "PrintOrder",
        //            data: postData,

        //            success: function () {
        //                window.location.reload();
        //            },
        //            dataType: "json",
        //            traditional: true
        //        });
        //    });
        //});

</script>

