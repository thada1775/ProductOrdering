@model IEnumerable<ProductOrdering.Models.Ordering>
@using ProductOrdering.Extensions
@using X.PagedList.Mvc.Core; <!--import to get HTML Helper-->
@using X.PagedList;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{
    ViewData["Title"] = "รายการสั่งซื้อ";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}

<h1>รายการสั่งซื้อ</h1>

<p>

    <a class="btn btn-success" style="color:white" asp-controller="Ordering" asp-action="AddOrdering" aria-hidden="true">
        <i class="fa fa-plus"></i>
        เพิ่มรายการสั่งซื้อ
    </a>

</p>
<p>
    <div class="form-inline">
        <form asp-action="Index" method="get">
            <input type="text" name="q" value="@ViewBag.q" class="form-control" />
            <span style="margin-left: 10px;">หมวดสินค้า</span>
            <select class="form-control" name="CategoryId" asp-items="ViewBag.CategoryId">
                <option value="">ทั้งหมด</option>
            </select>
            <span style="margin-left: 10px;">วันที่</span>
            <input type="date" name="dateOrder" value="@ViewBag.dateOrder" class="form-control" />
            <button type="submit" class="btn btn-info">ค้นหา</button>
        </form>
        @*@using (Html.BeginForm("Index", "Ordering", FormMethod.Get))
            {
                @Html.TextBox("q",)
                <span style="margin-left: 10px;">หมวดสินค้า</span>
                <select class="form-control" name="CategoryId" asp-items="ViewBag.CategoryId">
                    <option value="">ทั้งหมด</option>
                </select>
                <span style="margin-left: 10px;">วันที่</span>
                <input type="date" name="dateOrder" class="form-control" />
                <button type="submit" class="btn btn-info">ค้นหา</button>
            }*@
    </div>
</p>
<!-- paging control for navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", 
    new { 
        page = page, 
        q = HttpContextAccessor.HttpContext.Request.Query["q"].ToString(),
        CategoryId = HttpContextAccessor.HttpContext.Request.Query["CategoryId"]
    }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = false,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },

    })
<table class="table table-striped table-hover col-md-12">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Payment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Receiver.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Receiver.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr ondblclick="GetReceiverId(@item.Receiver.ReceiverId)">

                <td>
                    <div>
                        <img src="~/imageSource/@item.Product.ProductImage"
                             id="ProductImageSource" class="img-thumbnail rounded"
                             height="100" width="100"
                             asp-append-version="true" />
                    </div>
                    @*@Html.DisplayFor(modelItem => item.Product.ProductImage)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @item.Payment.GetDisplayName()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Receiver.Name)
                </td>
                <td>
                    <b>
                        @Html.DisplayFor(modelItem => item.Receiver.FullAddress)
                    </b>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.OrderingId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.OrderingId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.OrderingId">Delete</a>
                </td>

            </tr>
        }
    </tbody>
</table>
@section Scripts{
    <script>
        // Workaround to fix style of text for showing items .. through ..
        // Problem related to Boostrap 4 according to issue in link below
        // https://github.com/dncuug/X.PagedList/issues/127
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
}
<script type="text/javascript">
    function GetReceiverId(ReceiverId)
    {
        //console.log(ReceiverId);
        window.open('@Url.Action("AddOrdering", "Ordering")?receiverId=' + ReceiverId);
    }
</script>